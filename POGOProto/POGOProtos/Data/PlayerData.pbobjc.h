// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/PlayerData.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class POGOContactSettings;
@class POGOCurrency;
@class POGODailyBonus;
@class POGOEquippedBadge;
@class POGOPlayerAvatar;
GPB_ENUM_FWD_DECLARE(POGOTeamColor);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - POGOPlayerDataRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface POGOPlayerDataRoot : GPBRootObject
@end

#pragma mark - POGOPlayerData

typedef GPB_ENUM(POGOPlayerData_FieldNumber) {
  POGOPlayerData_FieldNumber_CreationTimestampMs = 1,
  POGOPlayerData_FieldNumber_Username = 2,
  POGOPlayerData_FieldNumber_Team = 5,
  POGOPlayerData_FieldNumber_TutorialStateArray = 7,
  POGOPlayerData_FieldNumber_Avatar = 8,
  POGOPlayerData_FieldNumber_MaxPokemonStorage = 9,
  POGOPlayerData_FieldNumber_MaxItemStorage = 10,
  POGOPlayerData_FieldNumber_DailyBonus = 11,
  POGOPlayerData_FieldNumber_EquippedBadge = 12,
  POGOPlayerData_FieldNumber_ContactSettings = 13,
  POGOPlayerData_FieldNumber_CurrenciesArray = 14,
};

@interface POGOPlayerData : GPBMessage

@property(nonatomic, readwrite) int64_t creationTimestampMs;

@property(nonatomic, readwrite, copy, null_resettable) NSString *username;

@property(nonatomic, readwrite) enum POGOTeamColor team;

// |tutorialStateArray| contains |POGOTutorialState|
@property(nonatomic, readwrite, strong, null_resettable) GPBEnumArray *tutorialStateArray;
/// The number of items in @c tutorialStateArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger tutorialStateArray_Count;

@property(nonatomic, readwrite, strong, null_resettable) POGOPlayerAvatar *avatar;
/// Test to see if @c avatar has been set.
@property(nonatomic, readwrite) BOOL hasAvatar;

@property(nonatomic, readwrite) int32_t maxPokemonStorage;

@property(nonatomic, readwrite) int32_t maxItemStorage;

@property(nonatomic, readwrite, strong, null_resettable) POGODailyBonus *dailyBonus;
/// Test to see if @c dailyBonus has been set.
@property(nonatomic, readwrite) BOOL hasDailyBonus;

@property(nonatomic, readwrite, strong, null_resettable) POGOEquippedBadge *equippedBadge;
/// Test to see if @c equippedBadge has been set.
@property(nonatomic, readwrite) BOOL hasEquippedBadge;

@property(nonatomic, readwrite, strong, null_resettable) POGOContactSettings *contactSettings;
/// Test to see if @c contactSettings has been set.
@property(nonatomic, readwrite) BOOL hasContactSettings;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<POGOCurrency*> *currenciesArray;
/// The number of items in @c currenciesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger currenciesArray_Count;

@end

/// Fetches the raw value of a @c POGOPlayerData's @c team property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t POGOPlayerData_Team_RawValue(POGOPlayerData *message);
/// Sets the raw value of an @c POGOPlayerData's @c team property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetPOGOPlayerData_Team_RawValue(POGOPlayerData *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
