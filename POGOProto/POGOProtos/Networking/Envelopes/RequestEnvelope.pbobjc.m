// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Envelopes/RequestEnvelope.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "POGOProtos/Networking/Envelopes/RequestEnvelope.pbobjc.h"
 #import "POGOProtos/Networking/Requests/Request.pbobjc.h"
 #import "POGOProtos/Networking/Envelopes/AuthTicket.pbobjc.h"
 #import "POGOProtos/Networking/Envelopes/Unknown6.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - POGORequestEnvelopeRoot

@implementation POGORequestEnvelopeRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[POGORequestRoot extensionRegistry]];
    [registry addExtensions:[POGOAuthTicketRoot extensionRegistry]];
    [registry addExtensions:[POGOUnknown6Root extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - POGORequestEnvelopeRoot_FileDescriptor

static GPBFileDescriptor *POGORequestEnvelopeRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Networking.Envelopes"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - POGORequestEnvelope

@implementation POGORequestEnvelope

@dynamic statusCode;
@dynamic requestId;
@dynamic requestsArray, requestsArray_Count;
@dynamic hasUnknown6, unknown6;
@dynamic latitude;
@dynamic longitude;
@dynamic altitude;
@dynamic hasAuthInfo, authInfo;
@dynamic hasAuthTicket, authTicket;
@dynamic unknown12;

typedef struct POGORequestEnvelope__storage_ {
  uint32_t _has_storage_[1];
  int32_t statusCode;
  NSMutableArray *requestsArray;
  POGOUnknown6 *unknown6;
  POGORequestEnvelope_AuthInfo *authInfo;
  POGOAuthTicket *authTicket;
  uint64_t requestId;
  double latitude;
  double longitude;
  double altitude;
  int64_t unknown12;
} POGORequestEnvelope__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "statusCode",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_FieldNumber_StatusCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, statusCode),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_FieldNumber_RequestId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, requestId),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "requestsArray",
        .dataTypeSpecific.className = GPBStringifySymbol(POGORequest),
        .number = POGORequestEnvelope_FieldNumber_RequestsArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, requestsArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unknown6",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOUnknown6),
        .number = POGORequestEnvelope_FieldNumber_Unknown6,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, unknown6),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "latitude",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_FieldNumber_Latitude,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, latitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "longitude",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_FieldNumber_Longitude,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, longitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "altitude",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_FieldNumber_Altitude,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, altitude),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeDouble,
      },
      {
        .name = "authInfo",
        .dataTypeSpecific.className = GPBStringifySymbol(POGORequestEnvelope_AuthInfo),
        .number = POGORequestEnvelope_FieldNumber_AuthInfo,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, authInfo),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "authTicket",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOAuthTicket),
        .number = POGORequestEnvelope_FieldNumber_AuthTicket,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, authTicket),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "unknown12",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_FieldNumber_Unknown12,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(POGORequestEnvelope__storage_, unknown12),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt64,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[POGORequestEnvelope class]
                                     rootClass:[POGORequestEnvelopeRoot class]
                                          file:POGORequestEnvelopeRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(POGORequestEnvelope__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - POGORequestEnvelope_AuthInfo

@implementation POGORequestEnvelope_AuthInfo

@dynamic provider;
@dynamic hasToken, token;

typedef struct POGORequestEnvelope_AuthInfo__storage_ {
  uint32_t _has_storage_[1];
  NSString *provider;
  POGORequestEnvelope_AuthInfo_JWT *token;
} POGORequestEnvelope_AuthInfo__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "provider",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_AuthInfo_FieldNumber_Provider,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(POGORequestEnvelope_AuthInfo__storage_, provider),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.className = GPBStringifySymbol(POGORequestEnvelope_AuthInfo_JWT),
        .number = POGORequestEnvelope_AuthInfo_FieldNumber_Token,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(POGORequestEnvelope_AuthInfo__storage_, token),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[POGORequestEnvelope_AuthInfo class]
                                     rootClass:[POGORequestEnvelopeRoot class]
                                          file:POGORequestEnvelopeRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(POGORequestEnvelope_AuthInfo__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - POGORequestEnvelope_AuthInfo_JWT

@implementation POGORequestEnvelope_AuthInfo_JWT

@dynamic contents;
@dynamic unknown2;

typedef struct POGORequestEnvelope_AuthInfo_JWT__storage_ {
  uint32_t _has_storage_[1];
  int32_t unknown2;
  NSString *contents;
} POGORequestEnvelope_AuthInfo_JWT__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "contents",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_AuthInfo_JWT_FieldNumber_Contents,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(POGORequestEnvelope_AuthInfo_JWT__storage_, contents),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "unknown2",
        .dataTypeSpecific.className = NULL,
        .number = POGORequestEnvelope_AuthInfo_JWT_FieldNumber_Unknown2,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(POGORequestEnvelope_AuthInfo_JWT__storage_, unknown2),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[POGORequestEnvelope_AuthInfo_JWT class]
                                     rootClass:[POGORequestEnvelopeRoot class]
                                          file:POGORequestEnvelopeRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(POGORequestEnvelope_AuthInfo_JWT__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
