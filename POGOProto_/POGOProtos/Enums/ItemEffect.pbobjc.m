// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Enums/ItemEffect.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "POGOProtos/Enums/ItemEffect.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - POGOItemEffectRoot

@implementation POGOItemEffectRoot

@end

#pragma mark - Enum POGOItemEffect

GPBEnumDescriptor *POGOItemEffect_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "ItemEffectNone\000ItemEffectCapNoFlee\000ItemE"
        "ffectCapNoMovement\000ItemEffectCapNoThreat"
        "\000ItemEffectCapTargetMax\000ItemEffectCapTar"
        "getSlow\000ItemEffectCapChanceNight\000ItemEff"
        "ectCapChanceTrainer\000ItemEffectCapChanceF"
        "irstThrow\000ItemEffectCapChanceLegend\000Item"
        "EffectCapChanceHeavy\000ItemEffectCapChance"
        "Repeat\000ItemEffectCapChanceMultiThrow\000Ite"
        "mEffectCapChanceAlways\000ItemEffectCapChan"
        "ceSingleThrow\000";
    static const int32_t values[] = {
        POGOItemEffect_ItemEffectNone,
        POGOItemEffect_ItemEffectCapNoFlee,
        POGOItemEffect_ItemEffectCapNoMovement,
        POGOItemEffect_ItemEffectCapNoThreat,
        POGOItemEffect_ItemEffectCapTargetMax,
        POGOItemEffect_ItemEffectCapTargetSlow,
        POGOItemEffect_ItemEffectCapChanceNight,
        POGOItemEffect_ItemEffectCapChanceTrainer,
        POGOItemEffect_ItemEffectCapChanceFirstThrow,
        POGOItemEffect_ItemEffectCapChanceLegend,
        POGOItemEffect_ItemEffectCapChanceHeavy,
        POGOItemEffect_ItemEffectCapChanceRepeat,
        POGOItemEffect_ItemEffectCapChanceMultiThrow,
        POGOItemEffect_ItemEffectCapChanceAlways,
        POGOItemEffect_ItemEffectCapChanceSingleThrow,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(POGOItemEffect)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:POGOItemEffect_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL POGOItemEffect_IsValidValue(int32_t value__) {
  switch (value__) {
    case POGOItemEffect_ItemEffectNone:
    case POGOItemEffect_ItemEffectCapNoFlee:
    case POGOItemEffect_ItemEffectCapNoMovement:
    case POGOItemEffect_ItemEffectCapNoThreat:
    case POGOItemEffect_ItemEffectCapTargetMax:
    case POGOItemEffect_ItemEffectCapTargetSlow:
    case POGOItemEffect_ItemEffectCapChanceNight:
    case POGOItemEffect_ItemEffectCapChanceTrainer:
    case POGOItemEffect_ItemEffectCapChanceFirstThrow:
    case POGOItemEffect_ItemEffectCapChanceLegend:
    case POGOItemEffect_ItemEffectCapChanceHeavy:
    case POGOItemEffect_ItemEffectCapChanceRepeat:
    case POGOItemEffect_ItemEffectCapChanceMultiThrow:
    case POGOItemEffect_ItemEffectCapChanceAlways:
    case POGOItemEffect_ItemEffectCapChanceSingleThrow:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
