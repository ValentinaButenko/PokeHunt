// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Inventory/InventoryItemData.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "POGOProtos/Inventory/InventoryItemData.pbobjc.h"
 #import "POGOProtos/Inventory/Item/ItemData.pbobjc.h"
 #import "POGOProtos/Inventory/AppliedItems.pbobjc.h"
 #import "POGOProtos/Inventory/EggIncubators.pbobjc.h"
 #import "POGOProtos/Inventory/PokemonFamily.pbobjc.h"
 #import "POGOProtos/Inventory/InventoryUpgrades.pbobjc.h"
 #import "POGOProtos/Data/PokemonData.pbobjc.h"
 #import "POGOProtos/Data/PokedexEntry.pbobjc.h"
 #import "POGOProtos/Data/Player/PlayerStats.pbobjc.h"
 #import "POGOProtos/Data/Player/PlayerCurrency.pbobjc.h"
 #import "POGOProtos/Data/Player/PlayerCamera.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - POGOInventoryItemDataRoot

@implementation POGOInventoryItemDataRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[POGOItemDataRoot extensionRegistry]];
    [registry addExtensions:[POGOAppliedItemsRoot extensionRegistry]];
    [registry addExtensions:[POGOEggIncubatorsRoot extensionRegistry]];
    [registry addExtensions:[POGOPokemonFamilyRoot extensionRegistry]];
    [registry addExtensions:[POGOInventoryUpgradesRoot extensionRegistry]];
    [registry addExtensions:[POGOPokemonDataRoot extensionRegistry]];
    [registry addExtensions:[POGOPokedexEntryRoot extensionRegistry]];
    [registry addExtensions:[POGOPlayerStatsRoot extensionRegistry]];
    [registry addExtensions:[POGOPlayerCurrencyRoot extensionRegistry]];
    [registry addExtensions:[POGOPlayerCameraRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - POGOInventoryItemDataRoot_FileDescriptor

static GPBFileDescriptor *POGOInventoryItemDataRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Inventory"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - POGOInventoryItemData

@implementation POGOInventoryItemData

@dynamic hasPokemonData, pokemonData;
@dynamic hasItem, item;
@dynamic hasPokedexEntry, pokedexEntry;
@dynamic hasPlayerStats, playerStats;
@dynamic hasPlayerCurrency, playerCurrency;
@dynamic hasPlayerCamera, playerCamera;
@dynamic hasInventoryUpgrades, inventoryUpgrades;
@dynamic hasAppliedItems, appliedItems;
@dynamic hasEggIncubators, eggIncubators;
@dynamic hasPokemonFamily, pokemonFamily;

typedef struct POGOInventoryItemData__storage_ {
  uint32_t _has_storage_[1];
  POGOPokemonData *pokemonData;
  POGOItemData *item;
  POGOPokedexEntry *pokedexEntry;
  POGOPlayerStats *playerStats;
  POGOPlayerCurrency *playerCurrency;
  POGOPlayerCamera *playerCamera;
  POGOInventoryUpgrades *inventoryUpgrades;
  POGOAppliedItems *appliedItems;
  POGOEggIncubators *eggIncubators;
  POGOPokemonFamily *pokemonFamily;
} POGOInventoryItemData__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "pokemonData",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOPokemonData),
        .number = POGOInventoryItemData_FieldNumber_PokemonData,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, pokemonData),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "item",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOItemData),
        .number = POGOInventoryItemData_FieldNumber_Item,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, item),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pokedexEntry",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOPokedexEntry),
        .number = POGOInventoryItemData_FieldNumber_PokedexEntry,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, pokedexEntry),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "playerStats",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOPlayerStats),
        .number = POGOInventoryItemData_FieldNumber_PlayerStats,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, playerStats),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "playerCurrency",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOPlayerCurrency),
        .number = POGOInventoryItemData_FieldNumber_PlayerCurrency,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, playerCurrency),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "playerCamera",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOPlayerCamera),
        .number = POGOInventoryItemData_FieldNumber_PlayerCamera,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, playerCamera),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "inventoryUpgrades",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOInventoryUpgrades),
        .number = POGOInventoryItemData_FieldNumber_InventoryUpgrades,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, inventoryUpgrades),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appliedItems",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOAppliedItems),
        .number = POGOInventoryItemData_FieldNumber_AppliedItems,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, appliedItems),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "eggIncubators",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOEggIncubators),
        .number = POGOInventoryItemData_FieldNumber_EggIncubators,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, eggIncubators),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "pokemonFamily",
        .dataTypeSpecific.className = GPBStringifySymbol(POGOPokemonFamily),
        .number = POGOInventoryItemData_FieldNumber_PokemonFamily,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(POGOInventoryItemData__storage_, pokemonFamily),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[POGOInventoryItemData class]
                                     rootClass:[POGOInventoryItemDataRoot class]
                                          file:POGOInventoryItemDataRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(POGOInventoryItemData__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
