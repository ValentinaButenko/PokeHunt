// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/DownloadItemTemplatesResponse.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class POGOBadgeSettings;
@class POGOCameraSettings;
@class POGODownloadItemTemplatesResponse_ItemTemplate;
@class POGOEncounterSettings;
@class POGOEquippedBadgeSettings;
@class POGOGymBattleSettings;
@class POGOGymLevelSettings;
@class POGOIapItemDisplay;
@class POGOIapSettings;
@class POGOItemSettings;
@class POGOMoveSequenceSettings;
@class POGOMoveSettings;
@class POGOPlayerLevelSettings;
@class POGOPokemonSettings;
@class POGOPokemonUpgradeSettings;
@class POGOTypeEffectiveSettings;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - POGODownloadItemTemplatesResponseRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface POGODownloadItemTemplatesResponseRoot : GPBRootObject
@end

#pragma mark - POGODownloadItemTemplatesResponse

typedef GPB_ENUM(POGODownloadItemTemplatesResponse_FieldNumber) {
  POGODownloadItemTemplatesResponse_FieldNumber_Success = 1,
  POGODownloadItemTemplatesResponse_FieldNumber_ItemTemplatesArray = 2,
  POGODownloadItemTemplatesResponse_FieldNumber_TimestampMs = 3,
};

@interface POGODownloadItemTemplatesResponse : GPBMessage

@property(nonatomic, readwrite) BOOL success;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<POGODownloadItemTemplatesResponse_ItemTemplate*> *itemTemplatesArray;
/// The number of items in @c itemTemplatesArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger itemTemplatesArray_Count;

@property(nonatomic, readwrite) uint64_t timestampMs;

@end

#pragma mark - POGODownloadItemTemplatesResponse_ItemTemplate

typedef GPB_ENUM(POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber) {
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_TemplateId = 1,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PokemonSettings = 2,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_ItemSettings = 3,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_MoveSettings = 4,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_MoveSequenceSettings = 5,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_TypeEffective = 8,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_BadgeSettings = 10,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_Camera = 11,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PlayerLevel = 12,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_GymLevel = 13,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_BattleSettings = 14,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_EncounterSettings = 15,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_IapItemDisplay = 16,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_IapSettings = 17,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_PokemonUpgrades = 18,
  POGODownloadItemTemplatesResponse_ItemTemplate_FieldNumber_EquippedBadges = 19,
};

@interface POGODownloadItemTemplatesResponse_ItemTemplate : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *templateId;

@property(nonatomic, readwrite, strong, null_resettable) POGOPokemonSettings *pokemonSettings;
/// Test to see if @c pokemonSettings has been set.
@property(nonatomic, readwrite) BOOL hasPokemonSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOItemSettings *itemSettings;
/// Test to see if @c itemSettings has been set.
@property(nonatomic, readwrite) BOOL hasItemSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOMoveSettings *moveSettings;
/// Test to see if @c moveSettings has been set.
@property(nonatomic, readwrite) BOOL hasMoveSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOMoveSequenceSettings *moveSequenceSettings;
/// Test to see if @c moveSequenceSettings has been set.
@property(nonatomic, readwrite) BOOL hasMoveSequenceSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOTypeEffectiveSettings *typeEffective;
/// Test to see if @c typeEffective has been set.
@property(nonatomic, readwrite) BOOL hasTypeEffective;

@property(nonatomic, readwrite, strong, null_resettable) POGOBadgeSettings *badgeSettings;
/// Test to see if @c badgeSettings has been set.
@property(nonatomic, readwrite) BOOL hasBadgeSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOCameraSettings *camera;
/// Test to see if @c camera has been set.
@property(nonatomic, readwrite) BOOL hasCamera;

@property(nonatomic, readwrite, strong, null_resettable) POGOPlayerLevelSettings *playerLevel;
/// Test to see if @c playerLevel has been set.
@property(nonatomic, readwrite) BOOL hasPlayerLevel;

@property(nonatomic, readwrite, strong, null_resettable) POGOGymLevelSettings *gymLevel;
/// Test to see if @c gymLevel has been set.
@property(nonatomic, readwrite) BOOL hasGymLevel;

@property(nonatomic, readwrite, strong, null_resettable) POGOGymBattleSettings *battleSettings;
/// Test to see if @c battleSettings has been set.
@property(nonatomic, readwrite) BOOL hasBattleSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOEncounterSettings *encounterSettings;
/// Test to see if @c encounterSettings has been set.
@property(nonatomic, readwrite) BOOL hasEncounterSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOIapItemDisplay *iapItemDisplay;
/// Test to see if @c iapItemDisplay has been set.
@property(nonatomic, readwrite) BOOL hasIapItemDisplay;

@property(nonatomic, readwrite, strong, null_resettable) POGOIapSettings *iapSettings;
/// Test to see if @c iapSettings has been set.
@property(nonatomic, readwrite) BOOL hasIapSettings;

@property(nonatomic, readwrite, strong, null_resettable) POGOPokemonUpgradeSettings *pokemonUpgrades;
/// Test to see if @c pokemonUpgrades has been set.
@property(nonatomic, readwrite) BOOL hasPokemonUpgrades;

@property(nonatomic, readwrite, strong, null_resettable) POGOEquippedBadgeSettings *equippedBadges;
/// Test to see if @c equippedBadges has been set.
@property(nonatomic, readwrite) BOOL hasEquippedBadges;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
