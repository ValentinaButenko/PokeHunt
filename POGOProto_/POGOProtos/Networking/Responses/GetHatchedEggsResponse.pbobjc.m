// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/GetHatchedEggsResponse.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "POGOProtos/Networking/Responses/GetHatchedEggsResponse.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - POGOGetHatchedEggsResponseRoot

@implementation POGOGetHatchedEggsResponseRoot

@end

#pragma mark - POGOGetHatchedEggsResponseRoot_FileDescriptor

static GPBFileDescriptor *POGOGetHatchedEggsResponseRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Networking.Responses"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - POGOGetHatchedEggsResponse

@implementation POGOGetHatchedEggsResponse

@dynamic success;
@dynamic pokemonIdArray, pokemonIdArray_Count;
@dynamic experienceAwardedArray, experienceAwardedArray_Count;
@dynamic candyAwardedArray, candyAwardedArray_Count;
@dynamic stardustAwardedArray, stardustAwardedArray_Count;

typedef struct POGOGetHatchedEggsResponse__storage_ {
  uint32_t _has_storage_[1];
  GPBUInt64Array *pokemonIdArray;
  GPBInt32Array *experienceAwardedArray;
  GPBInt32Array *candyAwardedArray;
  GPBInt32Array *stardustAwardedArray;
} POGOGetHatchedEggsResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "success",
        .dataTypeSpecific.className = NULL,
        .number = POGOGetHatchedEggsResponse_FieldNumber_Success,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "pokemonIdArray",
        .dataTypeSpecific.className = NULL,
        .number = POGOGetHatchedEggsResponse_FieldNumber_PokemonIdArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(POGOGetHatchedEggsResponse__storage_, pokemonIdArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "experienceAwardedArray",
        .dataTypeSpecific.className = NULL,
        .number = POGOGetHatchedEggsResponse_FieldNumber_ExperienceAwardedArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(POGOGetHatchedEggsResponse__storage_, experienceAwardedArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "candyAwardedArray",
        .dataTypeSpecific.className = NULL,
        .number = POGOGetHatchedEggsResponse_FieldNumber_CandyAwardedArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(POGOGetHatchedEggsResponse__storage_, candyAwardedArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "stardustAwardedArray",
        .dataTypeSpecific.className = NULL,
        .number = POGOGetHatchedEggsResponse_FieldNumber_StardustAwardedArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(POGOGetHatchedEggsResponse__storage_, stardustAwardedArray),
        .flags = GPBFieldRepeated | GPBFieldPacked,
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[POGOGetHatchedEggsResponse class]
                                     rootClass:[POGOGetHatchedEggsResponseRoot class]
                                          file:POGOGetHatchedEggsResponseRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(POGOGetHatchedEggsResponse__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
