// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/Pokemon/EncounterAttributes.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "POGOProtos/Settings/Master/Pokemon/EncounterAttributes.pbobjc.h"
 #import "POGOProtos/Enums/PokemonMovementType.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - POGOEncounterAttributesRoot

@implementation POGOEncounterAttributesRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    GPBDebugCheckRuntimeVersion();
    registry = [[GPBExtensionRegistry alloc] init];
    [registry addExtensions:[POGOPokemonMovementTypeRoot extensionRegistry]];
  }
  return registry;
}

@end

#pragma mark - POGOEncounterAttributesRoot_FileDescriptor

static GPBFileDescriptor *POGOEncounterAttributesRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPBDebugCheckRuntimeVersion();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"POGOProtos.Settings.Master.Pokemon"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - POGOEncounterAttributes

@implementation POGOEncounterAttributes

@dynamic baseCaptureRate;
@dynamic baseFleeRate;
@dynamic collisionRadiusM;
@dynamic collisionHeightM;
@dynamic collisionHeadRadiusM;
@dynamic movementType;
@dynamic movementTimerS;
@dynamic jumpTimeS;
@dynamic attackTimerS;

typedef struct POGOEncounterAttributes__storage_ {
  uint32_t _has_storage_[1];
  float baseCaptureRate;
  float baseFleeRate;
  float collisionRadiusM;
  float collisionHeightM;
  float collisionHeadRadiusM;
  POGOPokemonMovementType movementType;
  float movementTimerS;
  float jumpTimeS;
  float attackTimerS;
} POGOEncounterAttributes__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "baseCaptureRate",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_BaseCaptureRate,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, baseCaptureRate),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "baseFleeRate",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_BaseFleeRate,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, baseFleeRate),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "collisionRadiusM",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_CollisionRadiusM,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, collisionRadiusM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "collisionHeightM",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_CollisionHeightM,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, collisionHeightM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "collisionHeadRadiusM",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_CollisionHeadRadiusM,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, collisionHeadRadiusM),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "movementType",
        .dataTypeSpecific.enumDescFunc = POGOPokemonMovementType_EnumDescriptor,
        .number = POGOEncounterAttributes_FieldNumber_MovementType,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, movementType),
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "movementTimerS",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_MovementTimerS,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, movementTimerS),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "jumpTimeS",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_JumpTimeS,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, jumpTimeS),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
      {
        .name = "attackTimerS",
        .dataTypeSpecific.className = NULL,
        .number = POGOEncounterAttributes_FieldNumber_AttackTimerS,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(POGOEncounterAttributes__storage_, attackTimerS),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeFloat,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[POGOEncounterAttributes class]
                                     rootClass:[POGOEncounterAttributesRoot class]
                                          file:POGOEncounterAttributesRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(POGOEncounterAttributes__storage_)
                                         flags:0];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t POGOEncounterAttributes_MovementType_RawValue(POGOEncounterAttributes *message) {
  GPBDescriptor *descriptor = [POGOEncounterAttributes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:POGOEncounterAttributes_FieldNumber_MovementType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPOGOEncounterAttributes_MovementType_RawValue(POGOEncounterAttributes *message, int32_t value) {
  GPBDescriptor *descriptor = [POGOEncounterAttributes descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:POGOEncounterAttributes_FieldNumber_MovementType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
